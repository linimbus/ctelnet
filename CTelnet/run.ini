###############################################################################################
#                         telnet客户端自动化脚本
# 本工具支持如下参数的命令：sleep,wait,waitt,waitenter,ifexit,exitsys,
# print,noprint,ifelse,waittimeout,while,for以及用户的基本输入。
#
# 基本配置：                        含义：
# [host]192.168.1.20           telnet服务器IP地址。
# [port]23                     端口号。
# [exit]100                    telnet服务器无输出信息超时等待时间，单位秒。0表示永久等待。
#
# 命令：      参数：                含义：
# sleep       1000             等待1000毫秒时间。
# wait        str              等待字符串str出现之后才会执行下去。
# waitt       str              等待字符串str出现之前每秒输入t字母。
# waitenter   str              等待字符串str出现之前每秒输入回车。
# ifexit      str              等待字符串str出现之后客户端自动推出。
# waittimeout 1000 str         等待字符串str出现，如果1000毫秒没有出现，则执行下去。
# while       str  cmd         循环执行cmd，直到str出现。
# for         10   cmd         执行10次cmd命令。     
# exitsys                      客户端直接退出。
# print                        开启打印到窗口。
# noprint                      关闭打印到窗口。
# ifelse 1000 str  cmd1 cmd2   等待str出现，如果1000毫秒内出现，则执行cmd1，否则执行cmd2。
# cmd                          用户自定义命令输入。
# [null]                       空行会自动输入回车。
# %argx                        脚本中使用%x表示传入的参数x。                 
#
# 注意事项：所有命令必须顶行，命令与后面的参数是空格隔开的。
# 启动时必须配置正确的[host],[port],[exit]基本参数，执行完成之后会当前目录
# 生成的文件名称为 xxx.ini.result.txt 日志文件。
#
# 工具：
# telnet.exe 192.168.1.20  23  
#            192.168.1.20
#            auto_script.ini arg0 arg1 arg2 
#            参数最大支持100个，暂不支持'xx xx'字符串片段合并功能； 
# 
###############################################################################################
[host]%0
[port]23
[exit]100
[command]
wait login
root
wait Password
#while Password root
linimbus
sleep 1000
cd /home
waittimeout 1000 ##
waitt not
stop 10000 ls
\1\2\3\4\5\6\7
waitenter localhost
for 2 cd ..
while bin ls

ssh root@192.168.1.21
wait password
linimbus
wait #
cd /root/scons/

%1abc%2 %3asdf

cd test
ifelse 100 # ls cd /
wait [root@linimbus test]#
sleep 1000
#noprint
./ut_test
wait Run Summary
print
sleep 1000

exit
wait #
exit
sleep 10000

